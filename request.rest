### =========================
### üîê AUTHENTICATION TEST
### =========================

### STEP 1: CREATE ADMIN (jika belum ada)
POST http://localhost:3000/api/v1/auth/create
Content-Type: application/json

{
  "username": "testadmin",
  "password": "password123", 
  "email": "testadmin@email.com",
  "name": "Test Admin"
}

### STEP 2: LOGIN TO GET TOKEN ‚≠ê
POST http://localhost:3000/api/v1/auth/login
Content-Type: application/json

{
  "username": "testadmin",
  "password": "password123"
}

### =========================
### TESTING ENDPOINTS (dengan & tanpa auth)
### =========================
### COUNTER APIs
### =========================

### COUNTER - GET ALL COUNTERS
GET http://localhost:3000/api/v1/counters

### COUNTER - GET SINGLE COUNTER
GET http://localhost:3000/api/v1/counters/1

### COUNTER - CREATE COUNTER
POST http://localhost:3000/api/v1/counters
Content-Type: application/json

{
  "name": "Counter A",
  "maxQueue": 50
}

### COUNTER - UPDATE COUNTER
PUT http://localhost:3000/api/v1/counters/1
Content-Type: application/json

{
  "name": "Counter A Updated",
  "maxQueue": 75,
  "currentQueue": 5
}

### COUNTER - UPDATE COUNTER STATUS (ACTIVE)
PATCH http://localhost:3000/api/v1/counters/1/status
Content-Type: application/json

{
  "status": "active"
}

### COUNTER - UPDATE COUNTER STATUS (INACTIVE)
PATCH http://localhost:3000/api/v1/counters/1/status
Content-Type: application/json

{
  "status": "inactive"
}

### COUNTER - UPDATE COUNTER STATUS (DISABLE)
PATCH http://localhost:3000/api/v1/counters/1/status
Content-Type: application/json

{
  "status": "disable"
}

### =========================
### SYSTEM ENDPOINTS (untuk testing)
### =========================

### üîÑ RESET ALL DATA (jalankan ini dulu untuk clean start)
POST http://localhost:3000/api/v1/system/reset

### üìä GET SYSTEM STATUS
GET http://localhost:3000/api/v1/system/status

### =========================
### COMPLETE TESTING FLOW
### =========================

### üîÑ STEP 1: RESET - GET ALL COUNTERS (cek data yang ada)
GET http://localhost:3000/api/v1/counters

### üÜï STEP 2: CREATE COUNTER BARU
POST http://localhost:3000/api/v1/counters
Content-Type: application/json

{
  "name": "Counter Fresh",
  "maxQueue": 50
}

### üîê TEST: CREATE COUNTER DENGAN AUTH (copy token dari login)
POST http://localhost:3000/api/v1/counters
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "name": "Counter With Auth",
  "maxQueue": 75
}

### üëÅÔ∏è STEP 3: GET ALL COUNTERS (lihat ID counter yang baru dibuat)
GET http://localhost:3000/api/v1/counters

### üëÅÔ∏è STEP 4: GET SINGLE COUNTER (ganti ID sesuai hasil step 2)
GET http://localhost:3000/api/v1/counters/3

### ‚öôÔ∏è STEP 5: UPDATE COUNTER
PUT http://localhost:3000/api/v1/counters/3
Content-Type: application/json

{
  "name": "Counter Updated",
  "maxQueue": 75
}

### üîÑ STEP 6: UPDATE COUNTER STATUS - ACTIVE
PATCH http://localhost:3000/api/v1/counters/3/status
Content-Type: application/json

{
  "status": "active"
}

### =========================
### QUEUE TESTING (gunakan counter ID dari step 2)
### =========================

### üÜï STEP 7: CREATE QUEUE
POST http://localhost:3000/api/v1/queues
Content-Type: application/json

{
  "number": 1,
  "counterId": 3,
  "status": "claimed"
}

### üëÅÔ∏è STEP 8: GET ALL QUEUES
GET http://localhost:3000/api/v1/queues

### üëÅÔ∏è STEP 9: GET SINGLE QUEUE (ganti ID sesuai hasil step 7)
GET http://localhost:3000/api/v1/queues/1

### ‚öôÔ∏è STEP 10: UPDATE QUEUE
PUT http://localhost:3000/api/v1/queues/1
Content-Type: application/json

{
  "number": 1,
  "status": "called",
  "counterId": 3
}

### üîÑ STEP 11: UPDATE QUEUE STATUS
PATCH http://localhost:3000/api/v1/queues/1/status
Content-Type: application/json

{
  "status": "served"
}

### üóëÔ∏è STEP 12: DELETE QUEUE
DELETE http://localhost:3000/api/v1/queues/1

### üóëÔ∏è STEP 13: DELETE COUNTER (terakhir)
DELETE http://localhost:3000/api/v1/counters/3

### üîç STEP 14: VERIFY - GET ALL (pastikan data sudah terhapus)
GET http://localhost:3000/api/v1/counters

###
GET http://localhost:3000/api/v1/queues

